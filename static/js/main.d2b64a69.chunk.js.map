{"version":3,"sources":["components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","services/imageFinderApi.js","components/Button/Button.js","components/Modal/Modal.js","App.js","index.js"],"names":["Searchbar","state","initialValue","handleInputChange","e","setState","currentTarget","value","toLowerCase","handleSubmit","preventDefault","trim","props","onSubmit","toast","error","className","this","type","autoComplete","autoFocus","placeholder","onChange","Component","ImageGalleryItem","src","alt","largeImageUrl","data-large-url","ImageGallery","imageList","prevProps","prevState","onClick","map","image","webformatURL","largeImageURL","id","fetchImages","searchQuery","page","searchParams","URLSearchParams","q","per_page","key","fetch","then","response","ok","json","Promise","reject","Error","Button","modalRoot","document","querySelector","Modal","handleKeyDown","code","onClose","handleBackdropClick","target","window","addEventListener","removeEventListener","createPortal","Status","App","status","showModal","handleFormSubmit","resetPage","handleButtonClick","console","log","data","hits","length","catch","finally","scrollTo","top","documentElement","scrollHeight","behavior","toggleModal","handleGalleryItemClick","nodeName","dataset","largeUrl","prevQuery","nextQuery","message","color","height","width","timeout","autoClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d2b64a69.chunk.js","sourcesContent":["import { Component } from 'react';\nimport { ImSearch } from 'react-icons/im';\nimport { toast } from 'react-toastify';\n\nimport styles from './Searchbar.module.css';\n\nexport default class Searchbar extends Component {\n  state = {\n    initialValue: '',\n  };\n\n  handleInputChange = e => {\n    this.setState({ initialValue: e.currentTarget.value.toLowerCase() });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    if (this.state.initialValue.trim() === '') {\n      toast.error('Please enter your query.');\n      return;\n    }\n    this.props.onSubmit(this.state.initialValue.trim());\n    this.setState({ initialValue: '' });\n  };\n\n  render() {\n    return (\n      <header className=\"Searchbar\">\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\n          <button type=\"submit\" className=\"SearchForm-button\">\n            <span className=\"SearchForm-button-label\">\n              <ImSearch />\n              Search\n            </span>\n          </button>\n\n          <input\n            className=\"SearchForm-input\"\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n            value={this.state.initialValue}\n            onChange={this.handleInputChange}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n","import styles from './ImageGalleryItem.module.css';\n\nexport default function ImageGalleryItem({ src, alt, largeImageUrl }) {\n  return (\n    <li className=\"ImageGalleryItem\">\n      <img\n        src={src}\n        alt={alt}\n        data-large-url={largeImageUrl}\n        className=\"ImageGalleryItem-image\"\n      />\n    </li>\n  );\n}\n","import { Component } from 'react';\nimport styles from './ImageGallery.module.css';\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\n\nexport default class ImageGallery extends Component {\n  state = {\n    imageList: [],\n  };\n  componentDidUpdate(prevProps, prevState) {\n    const prevList = prevState.imageList;\n    const nextList = this.props.imageList;\n    if (prevList !== nextList) {\n      this.setState({ imageList: this.props.imageList });\n    }\n  }\n  render() {\n    return (\n      <ul className=\"ImageGallery\" onClick={this.props.onClick}>\n        {this.state.imageList.map(image => (\n          <ImageGalleryItem\n            key={image.id}\n            src={image.webformatURL}\n            alt={image.type}\n            largeImageUrl={image.largeImageURL}\n          />\n        ))}\n      </ul>\n    );\n  }\n}\n","const API_KEY = '19182122-b959857203510615d63e1aa25';\nconst BASE_URL =\n  'https://pixabay.com/api/?image_type=photo&orientation=horizontal&';\n\nexport default function fetchImages(searchQuery, page) {\n  const searchParams = new URLSearchParams({\n    q: searchQuery,\n    page,\n    per_page: 12,\n    key: API_KEY,\n  });\n  return fetch(`${BASE_URL}${searchParams}`).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n\n    return Promise.reject(\n      new Error(`There are no images for your query: ${searchQuery}`),\n    );\n  });\n}\n","import styles from './Button.module.css';\n\nexport default function Button({ onClick }) {\n  return (\n    <button\n      type=\"button\"\n      className=\"Button\"\n      onClick={() => {\n        onClick();\n      }}\n    >\n      Load more...\n    </button>\n  );\n}\n// window.scrollTo({\n//   top: document.documentElement.scrollHeight,\n//   behavior: 'smooth',\n// });\n","import { createPortal } from 'react-dom';\nimport { Component } from 'react';\n\nimport styles from './Modal.module.css';\nconst modalRoot = document.querySelector('#modal-root');\n\nexport default class Modal extends Component {\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      this.props.onClose();\n    }\n  };\n\n  handleBackdropClick = e => {\n    if (e.currentTarget === e.target) {\n      this.props.onClose();\n    }\n  };\n\n  render() {\n    return createPortal(\n      <div className=\"Overlay\" onClick={this.handleBackdropClick}>\n        <div className=\"Modal\">\n          <img src={this.props.src} alt={this.props.alt} />\n        </div>\n      </div>,\n      modalRoot,\n    );\n  }\n}\n","import { Component } from 'react';\nimport Loader from 'react-loader-spinner';\nimport { ToastContainer, toast } from 'react-toastify';\nimport Searchbar from './components/Searchbar/Searchbar';\nimport ImageGallery from './components/ImageGallery/ImageGallery';\nimport fetchImages from './services/imageFinderApi';\nimport Button from './components/Button/Button';\nimport Modal from './components/Modal/Modal';\n\nconst Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nexport default class App extends Component {\n  state = {\n    searchQuery: '',\n    page: 1,\n    imageList: [],\n    error: null,\n    status: Status.IDLE,\n    showModal: false,\n    largeImageUrl: '',\n    alt: '',\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const prevQuery = prevState.searchQuery;\n    const nextQuery = this.state.searchQuery;\n\n    if (prevQuery !== nextQuery) {\n      this.setState({ status: Status.PENDING });\n      console.log(this.state.status);\n      fetchImages(nextQuery, this.state.page)\n        .then(data => {\n          if (data.hits.length === 0) {\n            return toast.error('Unfortunately, there is nothing to show...');\n          }\n          this.setState({\n            imageList: [...data.hits],\n            status: Status.RESOLVED,\n          });\n          console.log(this.state.imageList);\n        })\n        .catch(error => this.setState({ error, status: Status.REJECTED }))\n        .finally(() => {\n          window.scrollTo({\n            top: document.documentElement.scrollHeight,\n            behavior: 'smooth',\n          });\n          console.log(this.state.status);\n          this.setState(prevState => ({ page: (prevState.page += 1) }));\n        });\n    }\n  }\n\n  handleFormSubmit = searchQuery => {\n    this.setState({ searchQuery });\n    this.resetPage();\n  };\n\n  handleButtonClick = () => {\n    console.log(this.state.page);\n    this.setState({ status: Status.PENDING });\n    console.log(this.state.status);\n    fetchImages(this.state.searchQuery, this.state.page)\n      .then(data => {\n        if (data.hits.length === 0) {\n          return toast.error('Unfortunately, there is nothing to show...');\n        }\n        this.setState(prevState => ({\n          imageList: [...prevState.imageList, ...data.hits],\n          status: Status.RESOLVED,\n        }));\n        console.log(this.state.imageList);\n      })\n      .catch(error => this.setState({ error, status: Status.REJECTED }))\n      .finally(() => {\n        window.scrollTo({\n          top: document.documentElement.scrollHeight,\n          behavior: 'smooth',\n        });\n        this.setState(prevState => ({ page: (prevState.page += 1) }));\n        console.log(this.state.status);\n      });\n  };\n\n  resetPage = () => {\n    this.setState({ page: 1 });\n  };\n\n  toggleModal = () => {\n    this.setState(({ showModal }) => ({ showModal: !showModal }));\n  };\n\n  handleGalleryItemClick = e => {\n    if (e.target.nodeName === 'IMG') {\n      this.setState({\n        largeImageUrl: e.target.dataset.largeUrl,\n        alt: e.target.alt,\n      });\n    }\n    this.toggleModal();\n  };\n\n  render() {\n    return (\n      <>\n        <Searchbar onSubmit={this.handleFormSubmit} />\n        {this.state.error && <h1>{this.state.error.message}</h1>}\n        <ImageGallery\n          imageList={this.state.imageList}\n          onClick={this.handleGalleryItemClick}\n        />\n        {this.state.showModal && (\n          <Modal\n            src={this.state.largeImageUrl}\n            alt={this.state.alt}\n            onClose={this.toggleModal}\n          />\n        )}\n        {this.state.status === Status.PENDING && (\n          <Loader\n            type=\"ThreeDots\"\n            color=\"#00BFFF\"\n            height={100}\n            width={100}\n            timeout={3000}\n          />\n        )}\n        {this.state.status === Status.RESOLVED && (\n          <Button onClick={this.handleButtonClick} />\n        )}\n\n        <ToastContainer autoClose={2000} />\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport 'react-toastify/dist/ReactToastify.css';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}