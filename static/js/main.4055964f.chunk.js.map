{"version":3,"sources":["components/ImageGalleryItem/ImageGalleryItem.module.css","components/Modal/Modal.module.css","components/ImageGallery/ImageGallery.module.css","components/Button/Button.module.css","components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","services/imageFinderApi.js","components/Button/Button.js","components/Modal/Modal.js","App.js","index.js","components/Searchbar/Searchbar.module.css"],"names":["module","exports","Searchbar","state","initialValue","handleInputChange","e","setState","currentTarget","value","toLowerCase","handleSubmit","preventDefault","onSubmit","props","trim","toast","error","this","className","styles","SearchForm","type","SearchFormButton","SearchFormButtonLabel","SearchFormInput","autoComplete","autoFocus","placeholder","onChange","Component","ImageGalleryItem","src","alt","largeImageUrl","data-large-url","ImageGalleryItemImage","ImageGallery","onClick","imageList","map","index","webformatURL","largeImageURL","fetchImages","searchQuery","page","searchParams","URLSearchParams","q","per_page","key","fetch","then","response","ok","json","Promise","reject","Error","Button","modalRoot","document","querySelector","Modal","handleKeyDown","code","onClose","handleBackdropClick","target","window","addEventListener","removeEventListener","createPortal","Overlay","children","Status","App","status","showModal","currentImgObj","largeUrl","handleFormSubmit","resetPage","handleButtonClick","nextQuery","fetchProcessing","data","hits","length","prevState","catch","message","finally","scrollTo","top","documentElement","scrollHeight","behavior","toggleModal","handleGalleryItemClick","dataset","nodeName","prevProps","prevQuery","color","height","width","autoClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4055964f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__3CvRl\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__2bkPr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__2AxMb\",\"Modal\":\"Modal_Modal__2WBTT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__DncjJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3R1xi\"};","import { Component } from 'react';\nimport { ImSearch } from 'react-icons/im';\nimport { toast } from 'react-toastify';\nimport PropTypes from 'prop-types';\n\nimport styles from './Searchbar.module.css';\n\nexport default class Searchbar extends Component {\n  static propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n  };\n\n  state = {\n    initialValue: '',\n  };\n\n  handleInputChange = e => {\n    this.setState({ initialValue: e.currentTarget.value.toLowerCase() });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { initialValue } = this.state;\n    const { onSubmit } = this.props;\n    if (initialValue.trim() === '') {\n      toast.error('Please enter your query.');\n      return;\n    }\n    onSubmit(initialValue.trim());\n    this.setState({ initialValue: '' });\n  };\n\n  render() {\n    const { initialValue } = this.state;\n    return (\n      <header className={styles.Searchbar}>\n        <form className={styles.SearchForm} onSubmit={this.handleSubmit}>\n          <button type=\"submit\" className={styles.SearchFormButton}>\n            <span className={styles.SearchFormButtonLabel}>\n              <ImSearch />\n              Search\n            </span>\n          </button>\n\n          <input\n            className={styles.SearchFormInput}\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n            value={initialValue}\n            onChange={this.handleInputChange}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n","import PropTypes from 'prop-types';\nimport styles from './ImageGalleryItem.module.css';\n\nexport default function ImageGalleryItem({ src, alt, largeImageUrl }) {\n  return (\n    <li className={styles.ImageGalleryItem}>\n      <img\n        src={src}\n        alt={alt}\n        data-large-url={largeImageUrl}\n        className={styles.ImageGalleryItemImage}\n      />\n    </li>\n  );\n}\n\nImageGalleryItem.propTypes = PropTypes.shape({\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  largeImageUrl: PropTypes.string.isRequired,\n}).isRequired;\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './ImageGallery.module.css';\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\n\nexport default class ImageGallery extends Component {\n  static propTypes = PropTypes.shape({\n    imageList: PropTypes.array.isRequired,\n    onClick: PropTypes.func.isRequired,\n  }).isRequired;\n\n  render() {\n    const { onClick, imageList } = this.props;\n    return (\n      <ul className={styles.ImageGallery} onClick={onClick}>\n        {imageList.map(({ webformatURL, type, largeImageURL }, index) => (\n          <ImageGalleryItem\n            key={index}\n            src={webformatURL}\n            alt={type}\n            largeImageUrl={largeImageURL}\n          />\n        ))}\n      </ul>\n    );\n  }\n}\n","const API_KEY = '19182122-b959857203510615d63e1aa25';\nconst BASE_URL =\n  'https://pixabay.com/api/?image_type=photo&orientation=horizontal&';\n\nexport default function fetchImages(searchQuery, page) {\n  const searchParams = new URLSearchParams({\n    q: searchQuery,\n    page,\n    per_page: 12,\n    key: API_KEY,\n  });\n  return fetch(`${BASE_URL}${searchParams}`).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n\n    return Promise.reject(\n      new Error(`There are no images for your query: ${searchQuery}`),\n    );\n  });\n}\n","import PropTypes from 'prop-types';\nimport styles from './Button.module.css';\n\nexport default function Button({ onClick }) {\n  return (\n    <button\n      type=\"button\"\n      className={styles.Button}\n      onClick={() => {\n        onClick();\n      }}\n    >\n      Load more...\n    </button>\n  );\n}\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n","import { createPortal } from 'react-dom';\nimport { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './Modal.module.css';\nconst modalRoot = document.querySelector('#modal-root');\n\nexport default class Modal extends Component {\n  static propTypes = PropTypes.shape({\n    src: PropTypes.string,\n    alt: PropTypes.string,\n    onClose: PropTypes.func,\n    children: PropTypes.element,\n  }).isRequired;\n\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      this.props.onClose();\n    }\n  };\n\n  handleBackdropClick = e => {\n    if (e.currentTarget === e.target) {\n      this.props.onClose();\n    }\n  };\n\n  render() {\n    const { src, alt } = this.props;\n    return createPortal(\n      <div className={styles.Overlay} onClick={this.handleBackdropClick}>\n        <div className={styles.Modal}>\n          <img src={src} alt={alt} />\n          {this.props.children}\n        </div>\n      </div>,\n      modalRoot,\n    );\n  }\n}\n","import { Component } from 'react';\nimport Loader from 'react-loader-spinner';\nimport { ToastContainer, toast } from 'react-toastify';\nimport Searchbar from './components/Searchbar/Searchbar';\nimport ImageGallery from './components/ImageGallery/ImageGallery';\nimport fetchImages from './services/imageFinderApi';\nimport Button from './components/Button/Button';\nimport Modal from './components/Modal/Modal';\n\nconst Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nexport default class App extends Component {\n  state = {\n    searchQuery: '',\n    page: 1,\n    imageList: [],\n    error: '',\n    status: Status.IDLE,\n    showModal: false,\n    currentImgObj: { largeUrl: '', alt: '' },\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const prevQuery = prevState.searchQuery;\n    const nextQuery = this.state.searchQuery;\n\n    if (prevQuery !== nextQuery) {\n      this.setState({\n        imageList: [],\n        status: Status.PENDING,\n      });\n      this.fetchProcessing(nextQuery);\n    }\n  }\n\n  handleFormSubmit = searchQuery => {\n    this.setState({ searchQuery });\n    this.resetPage();\n  };\n\n  handleButtonClick = () => {\n    const nextQuery = this.state.searchQuery;\n    this.setState({ status: Status.PENDING });\n    this.fetchProcessing(nextQuery);\n  };\n\n  fetchProcessing = nextQuery => {\n    fetchImages(nextQuery, this.state.page)\n      .then(data => {\n        if (data.hits.length === 0) {\n          this.setState({ status: Status.IDLE });\n          return toast.error('Unfortunately, there is nothing to show...');\n        }\n        this.setState(prevState => ({\n          imageList: [...prevState.imageList, ...data.hits],\n          status: Status.RESOLVED,\n        }));\n      })\n      .catch(({ message }) =>\n        this.setState({ error: message, status: Status.REJECTED }),\n      )\n      .finally(() => {\n        window.scrollTo({\n          top: document.documentElement.scrollHeight,\n          behavior: 'smooth',\n        });\n        this.setState(prevState => ({ page: (prevState.page += 1) }));\n      });\n  };\n\n  resetPage = () => {\n    this.setState({ page: 1 });\n  };\n\n  toggleModal = () => {\n    this.setState(({ showModal }) => ({\n      showModal: !showModal,\n    }));\n  };\n\n  handleGalleryItemClick = e => {\n    const largeUrl = e.target.dataset.largeUrl;\n    const alt = e.target.alt;\n    if (e.target.nodeName === 'IMG') {\n      this.setState({ currentImgObj: { largeUrl, alt } });\n    }\n    this.toggleModal();\n  };\n\n  render() {\n    const { imageList, error, status, showModal, currentImgObj } = this.state;\n    return (\n      <>\n        <Searchbar onSubmit={this.handleFormSubmit} />\n        {error && <h1>{error}</h1>}\n        <ImageGallery\n          imageList={imageList}\n          onClick={this.handleGalleryItemClick}\n        />\n        {showModal && (\n          <Modal\n            src={currentImgObj.largeUrl}\n            alt={currentImgObj.alt}\n            onClose={this.toggleModal}\n          ></Modal>\n        )}\n        {status === Status.PENDING && (\n          <Modal>\n            <Loader type=\"Watch\" color=\"#00BFFF\" height={300} width={300} />\n          </Modal>\n        )}\n        {status === Status.RESOLVED && (\n          <Button onClick={this.handleButtonClick} />\n        )}\n\n        <ToastContainer autoClose={2000} />\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport 'react-toastify/dist/ReactToastify.css';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__DjWH3\",\"SearchForm\":\"Searchbar_SearchForm__1ac2l\",\"SearchFormButton\":\"Searchbar_SearchFormButton__21S85\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__8f9cn\",\"SearchFormInput\":\"Searchbar_SearchFormInput__VhsfU\"};"],"sourceRoot":""}